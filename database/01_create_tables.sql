-- Oracle APEX MVP for Early Alzheimer's Patients
-- Database Schema Creation Script

-- Patients table
CREATE TABLE patients (
    patient_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    date_of_birth DATE NOT NULL,
    diagnosis_date DATE,
    severity_level VARCHAR2(20) DEFAULT 'MILD' CHECK (severity_level IN ('MILD', 'MODERATE', 'SEVERE')),
    caregiver_contact VARCHAR2(100),
    created_date DATE DEFAULT SYSDATE,
    updated_date DATE DEFAULT SYSDATE,
    is_active VARCHAR2(1) DEFAULT 'Y' CHECK (is_active IN ('Y', 'N'))
);

-- Emotions table
CREATE TABLE emotions (
    emotion_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    emotion_name VARCHAR2(30) NOT NULL UNIQUE,
    emotion_color VARCHAR2(7), -- Hex color code
    description VARCHAR2(200),
    is_positive VARCHAR2(1) DEFAULT 'Y' CHECK (is_positive IN ('Y', 'N')),
    created_date DATE DEFAULT SYSDATE
);

-- Game categories
CREATE TABLE game_categories (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR2(50) NOT NULL UNIQUE,
    description VARCHAR2(200),
    icon_class VARCHAR2(50),
    cognitive_area VARCHAR2(50), -- Memory, Attention, Language, Executive Function
    difficulty_level NUMBER(1) CHECK (difficulty_level BETWEEN 1 AND 5),
    created_date DATE DEFAULT SYSDATE
);

-- Games and activities
CREATE TABLE games (
    game_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_id NUMBER NOT NULL,
    game_name VARCHAR2(100) NOT NULL,
    description VARCHAR2(500),
    instructions CLOB,
    difficulty_level NUMBER(1) CHECK (difficulty_level BETWEEN 1 AND 5),
    estimated_duration NUMBER(3), -- minutes
    points_base NUMBER DEFAULT 10,
    cognitive_benefits VARCHAR2(200),
    recommended_emotions VARCHAR2(200), -- Comma-separated emotion IDs
    is_active VARCHAR2(1) DEFAULT 'Y' CHECK (is_active IN ('Y', 'N')),
    created_date DATE DEFAULT SYSDATE,
    CONSTRAINT fk_games_category FOREIGN KEY (category_id) REFERENCES game_categories(category_id)
);

-- Patient emotion logs
CREATE TABLE patient_emotions (
    emotion_log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    emotion_id NUMBER NOT NULL,
    intensity_level NUMBER(1) CHECK (intensity_level BETWEEN 1 AND 5),
    notes VARCHAR2(500),
    logged_date DATE DEFAULT SYSDATE,
    session_id VARCHAR2(50), -- To group emotions by session
    CONSTRAINT fk_patient_emotions_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    CONSTRAINT fk_patient_emotions_emotion FOREIGN KEY (emotion_id) REFERENCES emotions(emotion_id)
);

-- Game sessions
CREATE TABLE game_sessions (
    session_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    game_id NUMBER NOT NULL,
    start_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    end_time TIMESTAMP,
    score NUMBER DEFAULT 0,
    max_possible_score NUMBER,
    completion_status VARCHAR2(20) DEFAULT 'IN_PROGRESS' CHECK (completion_status IN ('IN_PROGRESS', 'COMPLETED', 'ABANDONED')),
    time_spent_seconds NUMBER,
    difficulty_adjusted NUMBER(1),
    mistakes_count NUMBER DEFAULT 0,
    hints_used NUMBER DEFAULT 0,
    session_notes VARCHAR2(500),
    CONSTRAINT fk_sessions_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    CONSTRAINT fk_sessions_game FOREIGN KEY (game_id) REFERENCES games(game_id)
);

-- Gamification - Achievements
CREATE TABLE achievements (
    achievement_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    achievement_name VARCHAR2(100) NOT NULL,
    description VARCHAR2(300),
    icon_class VARCHAR2(50),
    badge_color VARCHAR2(7),
    points_required NUMBER,
    category VARCHAR2(50), -- STREAK, SCORE, COMPLETION, CONSISTENCY, etc.
    criteria_json CLOB, -- JSON with specific criteria
    is_active VARCHAR2(1) DEFAULT 'Y' CHECK (is_active IN ('Y', 'N')),
    created_date DATE DEFAULT SYSDATE
);

-- Patient achievements
CREATE TABLE patient_achievements (
    patient_achievement_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    achievement_id NUMBER NOT NULL,
    earned_date DATE DEFAULT SYSDATE,
    points_earned NUMBER DEFAULT 0,
    CONSTRAINT fk_patient_achievements_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    CONSTRAINT fk_patient_achievements_achievement FOREIGN KEY (achievement_id) REFERENCES achievements(achievement_id),
    CONSTRAINT uk_patient_achievement UNIQUE (patient_id, achievement_id)
);

-- Patient statistics
CREATE TABLE patient_stats (
    stat_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    stat_date DATE DEFAULT TRUNC(SYSDATE),
    total_points NUMBER DEFAULT 0,
    games_played NUMBER DEFAULT 0,
    total_time_minutes NUMBER DEFAULT 0,
    average_score NUMBER(5,2) DEFAULT 0,
    streak_days NUMBER DEFAULT 0,
    current_level NUMBER DEFAULT 1,
    achievements_count NUMBER DEFAULT 0,
    mood_average NUMBER(3,2), -- Average mood for the day (1-5)
    cognitive_score NUMBER(5,2), -- Daily cognitive performance score
    CONSTRAINT fk_patient_stats_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    CONSTRAINT uk_patient_daily_stats UNIQUE (patient_id, stat_date)
);

-- AI Recommendations
CREATE TABLE ai_recommendations (
    recommendation_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    recommended_game_id NUMBER,
    recommendation_type VARCHAR2(50), -- EMOTION_BASED, PERFORMANCE_BASED, ROUTINE_BASED
    confidence_score NUMBER(3,2) CHECK (confidence_score BETWEEN 0 AND 1),
    reasoning CLOB,
    recommended_date DATE DEFAULT SYSDATE,
    is_accepted VARCHAR2(1) CHECK (is_accepted IN ('Y', 'N')),
    feedback_score NUMBER(1) CHECK (feedback_score BETWEEN 1 AND 5),
    CONSTRAINT fk_recommendations_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id),
    CONSTRAINT fk_recommendations_game FOREIGN KEY (recommended_game_id) REFERENCES games(game_id)
);

-- Caregiver notifications
CREATE TABLE caregiver_notifications (
    notification_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id NUMBER NOT NULL,
    notification_type VARCHAR2(50), -- PROGRESS, CONCERN, ACHIEVEMENT, REMINDER
    title VARCHAR2(200) NOT NULL,
    message CLOB,
    priority_level VARCHAR2(10) DEFAULT 'MEDIUM' CHECK (priority_level IN ('LOW', 'MEDIUM', 'HIGH', 'URGENT')),
    is_read VARCHAR2(1) DEFAULT 'N' CHECK (is_read IN ('Y', 'N')),
    created_date DATE DEFAULT SYSDATE,
    read_date DATE,
    CONSTRAINT fk_notifications_patient FOREIGN KEY (patient_id) REFERENCES patients(patient_id)
);

-- Create indexes for better performance
CREATE INDEX idx_patient_emotions_patient ON patient_emotions(patient_id);
CREATE INDEX idx_patient_emotions_date ON patient_emotions(logged_date);
CREATE INDEX idx_game_sessions_patient ON game_sessions(patient_id);
CREATE INDEX idx_game_sessions_game ON game_sessions(game_id);
CREATE INDEX idx_game_sessions_date ON game_sessions(start_time);
CREATE INDEX idx_patient_stats_patient ON patient_stats(patient_id);
CREATE INDEX idx_patient_stats_date ON patient_stats(stat_date);
CREATE INDEX idx_recommendations_patient ON ai_recommendations(patient_id);
CREATE INDEX idx_notifications_patient ON caregiver_notifications(patient_id);